ARG BASE="mcr.microsoft.com/oss/kubernetes/windows-host-process-containers-base-image:v1.0.0"
# --
# -- construct builder,
# -- inspired from https://raw.githubusercontent.com/rancher/rancher/master/package/windows/Dockerfile.agent
# --

FROM --platform=$BUILDPLATFORM golang:1.21.3 as builder
LABEL maintainer="zhangyinde.zyd@alibaba-inc.com"
ARG GOPROXY

RUN apt-get update && apt-get install -y unzip
WORKDIR /terway

# --
# -- download yq
# --

ENV YQ_VERSION v4.6.3
RUN curl -LO https://aliacs-k8s-cn-hongkong.oss-cn-hongkong.aliyuncs.com/public/pkg/windows/yq/yq-${YQ_VERSION}.zip \
    && unzip yq-${YQ_VERSION}.zip \
    && rm -f yq-{YQ_VERSION}.zip 

# --
# -- download cni plugins
# --

ENV CNI_PLUGINS_VERSION v0.9.2-aliyun.4
RUN curl -LO https://github.com/thxCode/containernetworking-plugins/releases/download/${CNI_PLUGINS_VERSION}/cni-plugins-windows-amd64-${CNI_PLUGINS_VERSION}.tgz \
    && mv cni-plugins-windows-amd64-${CNI_PLUGINS_VERSION}.tgz containernetworking-plugins.tgz \
    && mkdir containernetworking \
    && tar -xvzf containernetworking-plugins.tgz -C containernetworking \
    && rm -f containernetworking-plugins.tgz

# --
# -- download calico-felix
# --

ENV CALICO_VERSION v3.28.0-52561ce-aliyun
RUN curl -LO https://aliacs-k8s-cn-hangzhou.oss-cn-hangzhou.aliyuncs.com/public/pkg/windows/calico/calico-windows-${CALICO_VERSION}.zip \
    && mv calico-windows-${CALICO_VERSION}.zip calico.zip \
    && unzip calico.zip \
    && rm -f calico.zip

# --
# -- build
# --

WORKDIR /gopath/src/github.com/AliyunContainerService/terway/

# specify environment
ENV GOPROXY=$GOPROXY \
    CGO_ENABLED=0 \
    GOOS=windows \
    GO111MODULE=on

# cache vendor
COPY go.mod .
COPY go.sum .
RUN go mod download

WORKDIR /gopath/src/github.com/AliyunContainerService/terway/

ENV GOPROXY=$GOPROXY \
    CGO_ENABLED=0 \
    GOOS=windows \
    GOARCH=amd64 \
    GO111MODULE=on

COPY go.mod .
COPY go.sum .
RUN go mod download

COPY . .
RUN echo 'Getting hash ...'; \
    VSC_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ'); \
    VSC_VERSION=$(git describe --tags --match='v*' --long --abbrev=7 --dirty 2>/dev/null); \
    VSC_HASH=$(git rev-parse --short HEAD 2>/dev/null); \
    \
    echo 'Building terwayd ...'; \
    TERWAYD_BUILD_LDFLAGS="-X 'k8s.io/client-go/pkg/version.buildDate=${VSC_DATE}' -X 'k8s.io/client-go/pkg/version.gitVersion=${VSC_VERSION}' -X 'k8s.io/client-go/pkg/version.gitCommit=${VSC_HASH}' -X 'github.com/AliyunContainerService/terway/pkg/aliyun.kubernetesAlicloudIdentity=Kubernetes.Alicloud/${VSC_HASH}'"; \
    go build -tags default_build -trimpath \
        -ldflags "$TERWAYD_BUILD_LDFLAGS" \
        -o terwayd.exe ./cmd/terway; \
    \
    echo 'Building terway cni plugin ...'; \
    TERWAY_BUILD_LDFLAGS="-X 'github.com/containernetworking/plugins/pkg/utils/buildversion.BuildVersion=${VSC_VERSION}(${VSC_DATE})'"; \
    go build -tags default_build -trimpath \
        -ldflags "$TERWAY_BUILD_LDFLAGS" \
        -o terway.exe ./plugin/terway; \
    \
    echo 'Building terway cli ...'; \
    go build -tags default_build -trimpath \
        -o terway-cli.exe ./cmd/terway-cli; \
    \
    echo 'Complete.'

RUN pwd \
    &&ls -l
# --
# -- construct terway
# --

FROM $BASE
LABEL maintainer="zhangyinde.zyd@alibaba-inc.com"

USER ContainerAdministrator

ENV CLUSTER_SERVER="" \
    LOG_LEVEL="info" \
    BACKEND_TYPE="" \
    DEBUG_SOCKET="unix:///var/run/eni/eni_debug.socket" \
    POOL_CHECK_PERIOD_SECONDS="0"\
    NODE_NAME="" \
    POD_NAMESPACE="" \
    POD_NAME="" \
    CONTAINER_NAME="" \
    ENABLE_METRICS="false" \
    DISABLE_POLICY="false" \
    NETWORK_NAME_REGEX="^ethernet_.*"

# copy artifacts from builder
COPY --from=builder /terway/yq/yq.exe /Windows/System32/
COPY --from=builder /terway/containernetworking/host-local.exe /opt/cni/bin/
COPY --from=builder /terway/CalicoWindows/calico-felix.exe /opt/bin/
COPY --from=builder /gopath/src/github.com/AliyunContainerService/terway/terway-cli.exe /Windows/System32/
COPY --from=builder /gopath/src/github.com/AliyunContainerService/terway/terway.exe /opt/cni/bin/
COPY --from=builder /gopath/src/github.com/AliyunContainerService/terway/terwayd.exe /opt/bin/

# copy scripts from host
COPY policy/*.ps1 /
COPY entrypoint.ps1 /

ENTRYPOINT ["pwsh.exe", "-NoLogo"]
